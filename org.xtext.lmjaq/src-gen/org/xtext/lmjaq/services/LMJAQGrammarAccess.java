/*
 * generated by Xtext 2.25.0
 */
package org.xtext.lmjaq.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class LMJAQGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Model");
		private final Assignment cAbstractElmentsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cAbstractElmentsAbstractElementParserRuleCall_0 = (RuleCall)cAbstractElmentsAssignment.eContents().get(0);
		
		//Model:
		//    abstractElments+=AbstractElement*;
		@Override public ParserRule getRule() { return rule; }
		
		//abstractElments+=AbstractElement*
		public Assignment getAbstractElmentsAssignment() { return cAbstractElmentsAssignment; }
		
		//AbstractElement
		public RuleCall getAbstractElmentsAbstractElementParserRuleCall_0() { return cAbstractElmentsAbstractElementParserRuleCall_0; }
	}
	public class AbstractElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.AbstractElement");
		private final Assignment cElementTypeAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cElementTypeAlternatives_0 = (Alternatives)cElementTypeAssignment.eContents().get(0);
		private final RuleCall cElementTypePackageDeclarationParserRuleCall_0_0 = (RuleCall)cElementTypeAlternatives_0.eContents().get(0);
		private final RuleCall cElementTypeAbstractClassParserRuleCall_0_1 = (RuleCall)cElementTypeAlternatives_0.eContents().get(1);
		
		//AbstractElement:
		//    elementType=(PackageDeclaration | AbstractClass)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//elementType=(PackageDeclaration | AbstractClass)
		public Assignment getElementTypeAssignment() { return cElementTypeAssignment; }
		
		//(PackageDeclaration | AbstractClass)
		public Alternatives getElementTypeAlternatives_0() { return cElementTypeAlternatives_0; }
		
		//PackageDeclaration
		public RuleCall getElementTypePackageDeclarationParserRuleCall_0_0() { return cElementTypePackageDeclarationParserRuleCall_0_0; }
		
		//AbstractClass
		public RuleCall getElementTypeAbstractClassParserRuleCall_0_1() { return cElementTypeAbstractClassParserRuleCall_0_1; }
	}
	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//PackageDeclaration:
		//    'package' name=QualifiedName
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=QualifiedName
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//    ID ('.' ID)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class AbstractClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.AbstractClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeAbstractClassTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNameAlternatives_1_0 = (Alternatives)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0 = (RuleCall)cNameAlternatives_1_0.eContents().get(0);
		private final RuleCall cNameEVENT_CODETerminalRuleCall_1_0_1 = (RuleCall)cNameAlternatives_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAbstractPropertiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAbstractPropertiesAbstractPropertyParserRuleCall_3_0 = (RuleCall)cAbstractPropertiesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AbstractClass:
		//    type=AbstractClassType name=(ID | EVENT_CODE) '{' abstractProperties += AbstractProperty* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=AbstractClassType name=(ID | EVENT_CODE) '{' abstractProperties += AbstractProperty* '}'
		public Group getGroup() { return cGroup; }
		
		//type=AbstractClassType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//AbstractClassType
		public RuleCall getTypeAbstractClassTypeParserRuleCall_0_0() { return cTypeAbstractClassTypeParserRuleCall_0_0; }
		
		//name=(ID | EVENT_CODE)
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//(ID | EVENT_CODE)
		public Alternatives getNameAlternatives_1_0() { return cNameAlternatives_1_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0() { return cNameIDTerminalRuleCall_1_0_0; }
		
		//EVENT_CODE
		public RuleCall getNameEVENT_CODETerminalRuleCall_1_0_1() { return cNameEVENT_CODETerminalRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//abstractProperties += AbstractProperty*
		public Assignment getAbstractPropertiesAssignment_3() { return cAbstractPropertiesAssignment_3; }
		
		//AbstractProperty
		public RuleCall getAbstractPropertiesAbstractPropertyParserRuleCall_3_0() { return cAbstractPropertiesAbstractPropertyParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class AbstractClassTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.AbstractClassType");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTypeAlternatives_0 = (Alternatives)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeTelaParserRuleCall_0_0 = (RuleCall)cTypeAlternatives_0.eContents().get(0);
		private final RuleCall cTypeObjetoParserRuleCall_0_1 = (RuleCall)cTypeAlternatives_0.eContents().get(1);
		private final RuleCall cTypeRecursoParserRuleCall_0_2 = (RuleCall)cTypeAlternatives_0.eContents().get(2);
		private final RuleCall cTypeComponenteParserRuleCall_0_3 = (RuleCall)cTypeAlternatives_0.eContents().get(3);
		private final RuleCall cTypeEventoComplexoParserRuleCall_0_4 = (RuleCall)cTypeAlternatives_0.eContents().get(4);
		private final RuleCall cTypeConfigGeralParserRuleCall_0_5 = (RuleCall)cTypeAlternatives_0.eContents().get(5);
		private final RuleCall cTypeEstadoParserRuleCall_0_6 = (RuleCall)cTypeAlternatives_0.eContents().get(6);
		private final RuleCall cTypeItemParserRuleCall_0_7 = (RuleCall)cTypeAlternatives_0.eContents().get(7);
		private final RuleCall cTypeAlternativaParserRuleCall_0_8 = (RuleCall)cTypeAlternatives_0.eContents().get(8);
		private final RuleCall cTypeQuestaoParserRuleCall_0_9 = (RuleCall)cTypeAlternatives_0.eContents().get(9);
		
		//AbstractClassType:
		//    type=(Tela|Objeto|Recurso|Componente|EventoComplexo|ConfigGeral|Estado|Item|Alternativa|Questao)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=(Tela|Objeto|Recurso|Componente|EventoComplexo|ConfigGeral|Estado|Item|Alternativa|Questao)
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//(Tela|Objeto|Recurso|Componente|EventoComplexo|ConfigGeral|Estado|Item|Alternativa|Questao)
		public Alternatives getTypeAlternatives_0() { return cTypeAlternatives_0; }
		
		//Tela
		public RuleCall getTypeTelaParserRuleCall_0_0() { return cTypeTelaParserRuleCall_0_0; }
		
		//Objeto
		public RuleCall getTypeObjetoParserRuleCall_0_1() { return cTypeObjetoParserRuleCall_0_1; }
		
		//Recurso
		public RuleCall getTypeRecursoParserRuleCall_0_2() { return cTypeRecursoParserRuleCall_0_2; }
		
		//Componente
		public RuleCall getTypeComponenteParserRuleCall_0_3() { return cTypeComponenteParserRuleCall_0_3; }
		
		//EventoComplexo
		public RuleCall getTypeEventoComplexoParserRuleCall_0_4() { return cTypeEventoComplexoParserRuleCall_0_4; }
		
		//ConfigGeral
		public RuleCall getTypeConfigGeralParserRuleCall_0_5() { return cTypeConfigGeralParserRuleCall_0_5; }
		
		//Estado
		public RuleCall getTypeEstadoParserRuleCall_0_6() { return cTypeEstadoParserRuleCall_0_6; }
		
		//Item
		public RuleCall getTypeItemParserRuleCall_0_7() { return cTypeItemParserRuleCall_0_7; }
		
		//Alternativa
		public RuleCall getTypeAlternativaParserRuleCall_0_8() { return cTypeAlternativaParserRuleCall_0_8; }
		
		//Questao
		public RuleCall getTypeQuestaoParserRuleCall_0_9() { return cTypeQuestaoParserRuleCall_0_9; }
	}
	public class TelaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Tela");
		private final Keyword cTelaKeyword = (Keyword)rule.eContents().get(1);
		
		//Tela:
		//    'Tela'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Tela'
		public Keyword getTelaKeyword() { return cTelaKeyword; }
	}
	public class ObjetoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Objeto");
		private final Keyword cObjetoKeyword = (Keyword)rule.eContents().get(1);
		
		//Objeto:
		//    'Objeto'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Objeto'
		public Keyword getObjetoKeyword() { return cObjetoKeyword; }
	}
	public class AbstractPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.AbstractProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFormatAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cFormatAlternatives_0_0 = (Alternatives)cFormatAssignment_0.eContents().get(0);
		private final RuleCall cFormatClassReferenceParserRuleCall_0_0_0 = (RuleCall)cFormatAlternatives_0_0.eContents().get(0);
		private final RuleCall cFormatPropertyParserRuleCall_0_0_1 = (RuleCall)cFormatAlternatives_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		
		//AbstractProperty:
		//    format=(ClassReference | Property) ':' (values+=Value*)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//format=(ClassReference | Property) ':' (values+=Value*)
		public Group getGroup() { return cGroup; }
		
		//format=(ClassReference | Property)
		public Assignment getFormatAssignment_0() { return cFormatAssignment_0; }
		
		//(ClassReference | Property)
		public Alternatives getFormatAlternatives_0_0() { return cFormatAlternatives_0_0; }
		
		//ClassReference
		public RuleCall getFormatClassReferenceParserRuleCall_0_0_0() { return cFormatClassReferenceParserRuleCall_0_0_0; }
		
		//Property
		public RuleCall getFormatPropertyParserRuleCall_0_0_1() { return cFormatPropertyParserRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//(values+=Value*)
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }
		
		//Value
		public RuleCall getValuesValueParserRuleCall_2_0() { return cValuesValueParserRuleCall_2_0; }
	}
	public class ClassReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.ClassReference");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTypeAbstractClassTypeParserRuleCall_0 = (RuleCall)cTypeAssignment.eContents().get(0);
		
		//ClassReference:
		//    type=AbstractClassType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=AbstractClassType
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//AbstractClassType
		public RuleCall getTypeAbstractClassTypeParserRuleCall_0() { return cTypeAbstractClassTypeParserRuleCall_0; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Property");
		private final Assignment cPropertyTypeAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cPropertyTypeAlternatives_0 = (Alternatives)cPropertyTypeAssignment.eContents().get(0);
		private final RuleCall cPropertyTypePosicaoParserRuleCall_0_0 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(0);
		private final RuleCall cPropertyTypeEstaAtivoParserRuleCall_0_1 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(1);
		private final RuleCall cPropertyTypeCaminhoParserRuleCall_0_2 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(2);
		private final RuleCall cPropertyTypeTamanhoDaFonteParserRuleCall_0_3 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(3);
		private final RuleCall cPropertyTypeConteudoParserRuleCall_0_4 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(4);
		private final RuleCall cPropertyTypeTamanhoParserRuleCall_0_5 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(5);
		private final RuleCall cPropertyTypeIUParserRuleCall_0_6 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(6);
		private final RuleCall cPropertyTypeEventoSimplesParserRuleCall_0_7 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(7);
		private final RuleCall cPropertyTypeComprimentoDaTelaParserRuleCall_0_8 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(8);
		private final RuleCall cPropertyTypeAlturaDaTelaParserRuleCall_0_9 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(9);
		private final RuleCall cPropertyTypeEfeitoParserRuleCall_0_10 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(10);
		private final RuleCall cPropertyTypeEstadosAfetadosParserRuleCall_0_11 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(11);
		private final RuleCall cPropertyTypeEstadoInicialParserRuleCall_0_12 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(12);
		private final RuleCall cPropertyTypeEstadoFinalParserRuleCall_0_13 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(13);
		private final RuleCall cPropertyTypeProximoEstadosParserRuleCall_0_14 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(14);
		private final RuleCall cPropertyTypeFormatoQuizParserRuleCall_0_15 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(15);
		private final RuleCall cPropertyTypeEnunciadoParserRuleCall_0_16 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(16);
		private final RuleCall cPropertyTypeRespostaParserRuleCall_0_17 = (RuleCall)cPropertyTypeAlternatives_0.eContents().get(17);
		
		//Property:
		//    propertyType=(Posicao|estaAtivo|Caminho|TamanhoDaFonte|Conteudo|Tamanho|IU|EventoSimples|ComprimentoDaTela|AlturaDaTela|Efeito|EstadosAfetados|EstadoInicial|EstadoFinal|ProximoEstados|FormatoQuiz|Enunciado|Resposta)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//propertyType=(Posicao|estaAtivo|Caminho|TamanhoDaFonte|Conteudo|Tamanho|IU|EventoSimples|ComprimentoDaTela|AlturaDaTela|Efeito|EstadosAfetados|EstadoInicial|EstadoFinal|ProximoEstados|FormatoQuiz|Enunciado|Resposta)
		public Assignment getPropertyTypeAssignment() { return cPropertyTypeAssignment; }
		
		//(Posicao|estaAtivo|Caminho|TamanhoDaFonte|Conteudo|Tamanho|IU|EventoSimples|ComprimentoDaTela|AlturaDaTela|Efeito|EstadosAfetados|EstadoInicial|EstadoFinal|ProximoEstados|FormatoQuiz|Enunciado|Resposta)
		public Alternatives getPropertyTypeAlternatives_0() { return cPropertyTypeAlternatives_0; }
		
		//Posicao
		public RuleCall getPropertyTypePosicaoParserRuleCall_0_0() { return cPropertyTypePosicaoParserRuleCall_0_0; }
		
		//estaAtivo
		public RuleCall getPropertyTypeEstaAtivoParserRuleCall_0_1() { return cPropertyTypeEstaAtivoParserRuleCall_0_1; }
		
		//Caminho
		public RuleCall getPropertyTypeCaminhoParserRuleCall_0_2() { return cPropertyTypeCaminhoParserRuleCall_0_2; }
		
		//TamanhoDaFonte
		public RuleCall getPropertyTypeTamanhoDaFonteParserRuleCall_0_3() { return cPropertyTypeTamanhoDaFonteParserRuleCall_0_3; }
		
		//Conteudo
		public RuleCall getPropertyTypeConteudoParserRuleCall_0_4() { return cPropertyTypeConteudoParserRuleCall_0_4; }
		
		//Tamanho
		public RuleCall getPropertyTypeTamanhoParserRuleCall_0_5() { return cPropertyTypeTamanhoParserRuleCall_0_5; }
		
		//IU
		public RuleCall getPropertyTypeIUParserRuleCall_0_6() { return cPropertyTypeIUParserRuleCall_0_6; }
		
		//EventoSimples
		public RuleCall getPropertyTypeEventoSimplesParserRuleCall_0_7() { return cPropertyTypeEventoSimplesParserRuleCall_0_7; }
		
		//ComprimentoDaTela
		public RuleCall getPropertyTypeComprimentoDaTelaParserRuleCall_0_8() { return cPropertyTypeComprimentoDaTelaParserRuleCall_0_8; }
		
		//AlturaDaTela
		public RuleCall getPropertyTypeAlturaDaTelaParserRuleCall_0_9() { return cPropertyTypeAlturaDaTelaParserRuleCall_0_9; }
		
		//Efeito
		public RuleCall getPropertyTypeEfeitoParserRuleCall_0_10() { return cPropertyTypeEfeitoParserRuleCall_0_10; }
		
		//EstadosAfetados
		public RuleCall getPropertyTypeEstadosAfetadosParserRuleCall_0_11() { return cPropertyTypeEstadosAfetadosParserRuleCall_0_11; }
		
		//EstadoInicial
		public RuleCall getPropertyTypeEstadoInicialParserRuleCall_0_12() { return cPropertyTypeEstadoInicialParserRuleCall_0_12; }
		
		//EstadoFinal
		public RuleCall getPropertyTypeEstadoFinalParserRuleCall_0_13() { return cPropertyTypeEstadoFinalParserRuleCall_0_13; }
		
		//ProximoEstados
		public RuleCall getPropertyTypeProximoEstadosParserRuleCall_0_14() { return cPropertyTypeProximoEstadosParserRuleCall_0_14; }
		
		//FormatoQuiz
		public RuleCall getPropertyTypeFormatoQuizParserRuleCall_0_15() { return cPropertyTypeFormatoQuizParserRuleCall_0_15; }
		
		//Enunciado
		public RuleCall getPropertyTypeEnunciadoParserRuleCall_0_16() { return cPropertyTypeEnunciadoParserRuleCall_0_16; }
		
		//Resposta
		public RuleCall getPropertyTypeRespostaParserRuleCall_0_17() { return cPropertyTypeRespostaParserRuleCall_0_17; }
	}
	public class EstaAtivoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.estaAtivo");
		private final Keyword cAtivoKeyword = (Keyword)rule.eContents().get(1);
		
		//estaAtivo:
		//    'Ativo'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Ativo'
		public Keyword getAtivoKeyword() { return cAtivoKeyword; }
	}
	public class IUElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.IU");
		private final Keyword cIUKeyword = (Keyword)rule.eContents().get(1);
		
		//IU:
		//    'IU'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'IU'
		public Keyword getIUKeyword() { return cIUKeyword; }
	}
	public class PosicaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Posicao");
		private final Keyword cPosicaoKeyword = (Keyword)rule.eContents().get(1);
		
		//Posicao:
		//    'Posicao'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Posicao'
		public Keyword getPosicaoKeyword() { return cPosicaoKeyword; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUNITYINTDECIMALTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cINTEGERTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPATHTerminalRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cUI_TYPETerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cSIMPLE_EVENT_TYPETerminalRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cEVENT_CODETerminalRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cEFEITO_ACTIONTerminalRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cTEXT_CONTENTTerminalRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//Value:
		//    ID | Boolean | UNITYINTDECIMAL | INTEGER | PATH | UI_TYPE | SIMPLE_EVENT_TYPE | EVENT_CODE | EFEITO_ACTION | TEXT_CONTENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | Boolean | UNITYINTDECIMAL | INTEGER | PATH | UI_TYPE | SIMPLE_EVENT_TYPE | EVENT_CODE | EFEITO_ACTION | TEXT_CONTENT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//Boolean
		public RuleCall getBooleanParserRuleCall_1() { return cBooleanParserRuleCall_1; }
		
		//UNITYINTDECIMAL
		public RuleCall getUNITYINTDECIMALTerminalRuleCall_2() { return cUNITYINTDECIMALTerminalRuleCall_2; }
		
		//INTEGER
		public RuleCall getINTEGERTerminalRuleCall_3() { return cINTEGERTerminalRuleCall_3; }
		
		//PATH
		public RuleCall getPATHTerminalRuleCall_4() { return cPATHTerminalRuleCall_4; }
		
		//UI_TYPE
		public RuleCall getUI_TYPETerminalRuleCall_5() { return cUI_TYPETerminalRuleCall_5; }
		
		//SIMPLE_EVENT_TYPE
		public RuleCall getSIMPLE_EVENT_TYPETerminalRuleCall_6() { return cSIMPLE_EVENT_TYPETerminalRuleCall_6; }
		
		//EVENT_CODE
		public RuleCall getEVENT_CODETerminalRuleCall_7() { return cEVENT_CODETerminalRuleCall_7; }
		
		//EFEITO_ACTION
		public RuleCall getEFEITO_ACTIONTerminalRuleCall_8() { return cEFEITO_ACTIONTerminalRuleCall_8; }
		
		//TEXT_CONTENT
		public RuleCall getTEXT_CONTENTTerminalRuleCall_9() { return cTEXT_CONTENTTerminalRuleCall_9; }
	}
	public class ComponenteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Componente");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGatilhoParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cComportamentoParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Componente:
		//    Gatilho | Comportamento
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Gatilho | Comportamento
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Gatilho
		public RuleCall getGatilhoParserRuleCall_0() { return cGatilhoParserRuleCall_0; }
		
		//Comportamento
		public RuleCall getComportamentoParserRuleCall_1() { return cComportamentoParserRuleCall_1; }
	}
	public class EventoComplexoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.EventoComplexo");
		private final Keyword cEventoComplexoKeyword = (Keyword)rule.eContents().get(1);
		
		//EventoComplexo:
		//    'EventoComplexo'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'EventoComplexo'
		public Keyword getEventoComplexoKeyword() { return cEventoComplexoKeyword; }
	}
	public class EventoSimplesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.EventoSimples");
		private final Keyword cEventoSimplesKeyword = (Keyword)rule.eContents().get(1);
		
		//EventoSimples:
		//    'EventoSimples'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'EventoSimples'
		public Keyword getEventoSimplesKeyword() { return cEventoSimplesKeyword; }
	}
	public class GatilhoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Gatilho");
		private final RuleCall cAoClicarParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Gatilho:
		//    AoClicar
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AoClicar
		public RuleCall getAoClicarParserRuleCall() { return cAoClicarParserRuleCall; }
	}
	public class AoClicarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.AoClicar");
		private final Keyword cAoClicarKeyword = (Keyword)rule.eContents().get(1);
		
		//AoClicar:
		//    'AoClicar'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'AoClicar'
		public Keyword getAoClicarKeyword() { return cAoClicarKeyword; }
	}
	public class ComportamentoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Comportamento");
		private final Keyword cComportamentoKeyword = (Keyword)rule.eContents().get(1);
		
		//Comportamento:
		//    'Comportamento'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Comportamento'
		public Keyword getComportamentoKeyword() { return cComportamentoKeyword; }
	}
	public class RecursoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Recurso");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cImagemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnimacaoParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTextoParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Recurso:
		//     (Imagem | Animacao | Texto)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(Imagem | Animacao | Texto)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Imagem
		public RuleCall getImagemParserRuleCall_0() { return cImagemParserRuleCall_0; }
		
		//Animacao
		public RuleCall getAnimacaoParserRuleCall_1() { return cAnimacaoParserRuleCall_1; }
		
		//Texto
		public RuleCall getTextoParserRuleCall_2() { return cTextoParserRuleCall_2; }
	}
	public class ImagemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Imagem");
		private final Keyword cImagemKeyword = (Keyword)rule.eContents().get(1);
		
		//Imagem:
		//    'Imagem'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Imagem'
		public Keyword getImagemKeyword() { return cImagemKeyword; }
	}
	public class AnimacaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Animacao");
		private final Keyword cAnimacaoKeyword = (Keyword)rule.eContents().get(1);
		
		//Animacao:
		//    'Animacao'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Animacao'
		public Keyword getAnimacaoKeyword() { return cAnimacaoKeyword; }
	}
	public class TextoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Texto");
		private final Keyword cTextoKeyword = (Keyword)rule.eContents().get(1);
		
		//Texto:
		//    'Texto'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Texto'
		public Keyword getTextoKeyword() { return cTextoKeyword; }
	}
	public class ConteudoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Conteudo");
		private final Keyword cConteudoKeyword = (Keyword)rule.eContents().get(1);
		
		//Conteudo:
		//    'Conteudo'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Conteudo'
		public Keyword getConteudoKeyword() { return cConteudoKeyword; }
	}
	public class TamanhoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Tamanho");
		private final Keyword cTamanhoKeyword = (Keyword)rule.eContents().get(1);
		
		//Tamanho:
		//    'Tamanho'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Tamanho'
		public Keyword getTamanhoKeyword() { return cTamanhoKeyword; }
	}
	public class TamanhoDaFonteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.TamanhoDaFonte");
		private final Keyword cTamanhoDaFonteKeyword = (Keyword)rule.eContents().get(1);
		
		//TamanhoDaFonte:
		//    'TamanhoDaFonte'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'TamanhoDaFonte'
		public Keyword getTamanhoDaFonteKeyword() { return cTamanhoDaFonteKeyword; }
	}
	public class CaminhoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Caminho");
		private final Keyword cCaminhoKeyword = (Keyword)rule.eContents().get(1);
		
		//Caminho:
		//    'Caminho'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Caminho'
		public Keyword getCaminhoKeyword() { return cCaminhoKeyword; }
	}
	public class ConfigGeralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.ConfigGeral");
		private final Keyword cConfigGeralKeyword = (Keyword)rule.eContents().get(1);
		
		//ConfigGeral:
		//    'ConfigGeral'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ConfigGeral'
		public Keyword getConfigGeralKeyword() { return cConfigGeralKeyword; }
	}
	public class ComprimentoDaTelaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.ComprimentoDaTela");
		private final Keyword cComprimentoDaTelaKeyword = (Keyword)rule.eContents().get(1);
		
		//ComprimentoDaTela:
		//    'ComprimentoDaTela'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ComprimentoDaTela'
		public Keyword getComprimentoDaTelaKeyword() { return cComprimentoDaTelaKeyword; }
	}
	public class AlturaDaTelaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.AlturaDaTela");
		private final Keyword cAlturaDaTelaKeyword = (Keyword)rule.eContents().get(1);
		
		//AlturaDaTela:
		//    'AlturaDaTela'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'AlturaDaTela'
		public Keyword getAlturaDaTelaKeyword() { return cAlturaDaTelaKeyword; }
	}
	public class QuestaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Questao");
		private final Keyword cQuestaoKeyword = (Keyword)rule.eContents().get(1);
		
		//Questao:
		//    'Questao'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Questao'
		public Keyword getQuestaoKeyword() { return cQuestaoKeyword; }
	}
	public class AlternativaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Alternativa");
		private final Keyword cAlternativaKeyword = (Keyword)rule.eContents().get(1);
		
		//Alternativa:
		//    'Alternativa'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Alternativa'
		public Keyword getAlternativaKeyword() { return cAlternativaKeyword; }
	}
	public class EnunciadoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Enunciado");
		private final Keyword cEnunciadoKeyword = (Keyword)rule.eContents().get(1);
		
		//Enunciado:
		//    'Enunciado'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Enunciado'
		public Keyword getEnunciadoKeyword() { return cEnunciadoKeyword; }
	}
	public class RespostaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Resposta");
		private final Keyword cRespostaKeyword = (Keyword)rule.eContents().get(1);
		
		//Resposta:
		//    'Resposta'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Resposta'
		public Keyword getRespostaKeyword() { return cRespostaKeyword; }
	}
	public class FormatoQuizElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.FormatoQuiz");
		private final Keyword cFormatoQuizKeyword = (Keyword)rule.eContents().get(1);
		
		//FormatoQuiz:
		//    'FormatoQuiz'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'FormatoQuiz'
		public Keyword getFormatoQuizKeyword() { return cFormatoQuizKeyword; }
	}
	public class EstadoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Estado");
		private final Keyword cEstadoKeyword = (Keyword)rule.eContents().get(1);
		
		//Estado:
		//    'Estado'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Estado'
		public Keyword getEstadoKeyword() { return cEstadoKeyword; }
	}
	public class EstadoFinalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.EstadoFinal");
		private final Keyword cEstadoFinalKeyword = (Keyword)rule.eContents().get(1);
		
		//EstadoFinal:
		//    'EstadoFinal'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'EstadoFinal'
		public Keyword getEstadoFinalKeyword() { return cEstadoFinalKeyword; }
	}
	public class EstadoInicialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.EstadoInicial");
		private final Keyword cEstadoInicialKeyword = (Keyword)rule.eContents().get(1);
		
		//EstadoInicial:
		//    'EstadoInicial'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'EstadoInicial'
		public Keyword getEstadoInicialKeyword() { return cEstadoInicialKeyword; }
	}
	public class ProximoEstadosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.ProximoEstados");
		private final Keyword cProximoEstadosKeyword = (Keyword)rule.eContents().get(1);
		
		//ProximoEstados:
		//    'ProximoEstados'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ProximoEstados'
		public Keyword getProximoEstadosKeyword() { return cProximoEstadosKeyword; }
	}
	public class ItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Item");
		private final Keyword cItemKeyword = (Keyword)rule.eContents().get(1);
		
		//Item:
		//    'Item'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Item'
		public Keyword getItemKeyword() { return cItemKeyword; }
	}
	public class EfeitoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Efeito");
		private final Keyword cEfeitoKeyword = (Keyword)rule.eContents().get(1);
		
		//Efeito:
		//    'Efeito'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Efeito'
		public Keyword getEfeitoKeyword() { return cEfeitoKeyword; }
	}
	public class EstadosAfetadosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.EstadosAfetados");
		private final Keyword cEstadosAfetadosKeyword = (Keyword)rule.eContents().get(1);
		
		//EstadosAfetados:
		//    'EstadosAfetados'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'EstadosAfetados'
		public Keyword getEstadosAfetadosKeyword() { return cEstadosAfetadosKeyword; }
	}
	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.Boolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFALSETerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTRUETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Boolean:
		//    FALSE | TRUE
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//FALSE | TRUE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FALSE
		public RuleCall getFALSETerminalRuleCall_0() { return cFALSETerminalRuleCall_0; }
		
		//TRUE
		public RuleCall getTRUETerminalRuleCall_1() { return cTRUETerminalRuleCall_1; }
	}
	
	
	private final ModelElements pModel;
	private final AbstractElementElements pAbstractElement;
	private final PackageDeclarationElements pPackageDeclaration;
	private final QualifiedNameElements pQualifiedName;
	private final AbstractClassElements pAbstractClass;
	private final AbstractClassTypeElements pAbstractClassType;
	private final TelaElements pTela;
	private final ObjetoElements pObjeto;
	private final AbstractPropertyElements pAbstractProperty;
	private final ClassReferenceElements pClassReference;
	private final PropertyElements pProperty;
	private final EstaAtivoElements pEstaAtivo;
	private final IUElements pIU;
	private final PosicaoElements pPosicao;
	private final ValueElements pValue;
	private final ComponenteElements pComponente;
	private final EventoComplexoElements pEventoComplexo;
	private final EventoSimplesElements pEventoSimples;
	private final GatilhoElements pGatilho;
	private final AoClicarElements pAoClicar;
	private final ComportamentoElements pComportamento;
	private final RecursoElements pRecurso;
	private final ImagemElements pImagem;
	private final AnimacaoElements pAnimacao;
	private final TextoElements pTexto;
	private final ConteudoElements pConteudo;
	private final TamanhoElements pTamanho;
	private final TamanhoDaFonteElements pTamanhoDaFonte;
	private final CaminhoElements pCaminho;
	private final ConfigGeralElements pConfigGeral;
	private final ComprimentoDaTelaElements pComprimentoDaTela;
	private final AlturaDaTelaElements pAlturaDaTela;
	private final QuestaoElements pQuestao;
	private final AlternativaElements pAlternativa;
	private final EnunciadoElements pEnunciado;
	private final RespostaElements pResposta;
	private final FormatoQuizElements pFormatoQuiz;
	private final EstadoElements pEstado;
	private final EstadoFinalElements pEstadoFinal;
	private final EstadoInicialElements pEstadoInicial;
	private final ProximoEstadosElements pProximoEstados;
	private final ItemElements pItem;
	private final EfeitoElements pEfeito;
	private final EstadosAfetadosElements pEstadosAfetados;
	private final BooleanElements pBoolean;
	private final TerminalRule tTEXT_CONTENT;
	private final TerminalRule tEFEITO_ACTION;
	private final TerminalRule tUI_TYPE;
	private final TerminalRule tSIMPLE_EVENT_TYPE;
	private final TerminalRule tUNITYINTDECIMAL;
	private final TerminalRule tINTEGER;
	private final TerminalRule tPATH;
	private final TerminalRule tSLASH;
	private final TerminalRule tFALSE;
	private final TerminalRule tTRUE;
	private final TerminalRule tEVENT_CODE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public LMJAQGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pAbstractElement = new AbstractElementElements();
		this.pPackageDeclaration = new PackageDeclarationElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pAbstractClass = new AbstractClassElements();
		this.pAbstractClassType = new AbstractClassTypeElements();
		this.pTela = new TelaElements();
		this.pObjeto = new ObjetoElements();
		this.pAbstractProperty = new AbstractPropertyElements();
		this.pClassReference = new ClassReferenceElements();
		this.pProperty = new PropertyElements();
		this.pEstaAtivo = new EstaAtivoElements();
		this.pIU = new IUElements();
		this.pPosicao = new PosicaoElements();
		this.pValue = new ValueElements();
		this.pComponente = new ComponenteElements();
		this.pEventoComplexo = new EventoComplexoElements();
		this.pEventoSimples = new EventoSimplesElements();
		this.pGatilho = new GatilhoElements();
		this.pAoClicar = new AoClicarElements();
		this.pComportamento = new ComportamentoElements();
		this.pRecurso = new RecursoElements();
		this.pImagem = new ImagemElements();
		this.pAnimacao = new AnimacaoElements();
		this.pTexto = new TextoElements();
		this.pConteudo = new ConteudoElements();
		this.pTamanho = new TamanhoElements();
		this.pTamanhoDaFonte = new TamanhoDaFonteElements();
		this.pCaminho = new CaminhoElements();
		this.pConfigGeral = new ConfigGeralElements();
		this.pComprimentoDaTela = new ComprimentoDaTelaElements();
		this.pAlturaDaTela = new AlturaDaTelaElements();
		this.pQuestao = new QuestaoElements();
		this.pAlternativa = new AlternativaElements();
		this.pEnunciado = new EnunciadoElements();
		this.pResposta = new RespostaElements();
		this.pFormatoQuiz = new FormatoQuizElements();
		this.pEstado = new EstadoElements();
		this.pEstadoFinal = new EstadoFinalElements();
		this.pEstadoInicial = new EstadoInicialElements();
		this.pProximoEstados = new ProximoEstadosElements();
		this.pItem = new ItemElements();
		this.pEfeito = new EfeitoElements();
		this.pEstadosAfetados = new EstadosAfetadosElements();
		this.pBoolean = new BooleanElements();
		this.tTEXT_CONTENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.TEXT_CONTENT");
		this.tEFEITO_ACTION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.EFEITO_ACTION");
		this.tUI_TYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.UI_TYPE");
		this.tSIMPLE_EVENT_TYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.SIMPLE_EVENT_TYPE");
		this.tUNITYINTDECIMAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.UNITYINTDECIMAL");
		this.tINTEGER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.INTEGER");
		this.tPATH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.PATH");
		this.tSLASH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.SLASH");
		this.tFALSE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.FALSE");
		this.tTRUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.TRUE");
		this.tEVENT_CODE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.lmjaq.LMJAQ.EVENT_CODE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.lmjaq.LMJAQ".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    abstractElments+=AbstractElement*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//AbstractElement:
	//    elementType=(PackageDeclaration | AbstractClass)
	//;
	public AbstractElementElements getAbstractElementAccess() {
		return pAbstractElement;
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}
	
	//PackageDeclaration:
	//    'package' name=QualifiedName
	//;
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return pPackageDeclaration;
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}
	
	//QualifiedName:
	//    ID ('.' ID)*
	//;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//AbstractClass:
	//    type=AbstractClassType name=(ID | EVENT_CODE) '{' abstractProperties += AbstractProperty* '}'
	//;
	public AbstractClassElements getAbstractClassAccess() {
		return pAbstractClass;
	}
	
	public ParserRule getAbstractClassRule() {
		return getAbstractClassAccess().getRule();
	}
	
	//AbstractClassType:
	//    type=(Tela|Objeto|Recurso|Componente|EventoComplexo|ConfigGeral|Estado|Item|Alternativa|Questao)
	//;
	public AbstractClassTypeElements getAbstractClassTypeAccess() {
		return pAbstractClassType;
	}
	
	public ParserRule getAbstractClassTypeRule() {
		return getAbstractClassTypeAccess().getRule();
	}
	
	//Tela:
	//    'Tela'
	//;
	public TelaElements getTelaAccess() {
		return pTela;
	}
	
	public ParserRule getTelaRule() {
		return getTelaAccess().getRule();
	}
	
	//Objeto:
	//    'Objeto'
	//;
	public ObjetoElements getObjetoAccess() {
		return pObjeto;
	}
	
	public ParserRule getObjetoRule() {
		return getObjetoAccess().getRule();
	}
	
	//AbstractProperty:
	//    format=(ClassReference | Property) ':' (values+=Value*)
	//;
	public AbstractPropertyElements getAbstractPropertyAccess() {
		return pAbstractProperty;
	}
	
	public ParserRule getAbstractPropertyRule() {
		return getAbstractPropertyAccess().getRule();
	}
	
	//ClassReference:
	//    type=AbstractClassType
	//;
	public ClassReferenceElements getClassReferenceAccess() {
		return pClassReference;
	}
	
	public ParserRule getClassReferenceRule() {
		return getClassReferenceAccess().getRule();
	}
	
	//Property:
	//    propertyType=(Posicao|estaAtivo|Caminho|TamanhoDaFonte|Conteudo|Tamanho|IU|EventoSimples|ComprimentoDaTela|AlturaDaTela|Efeito|EstadosAfetados|EstadoInicial|EstadoFinal|ProximoEstados|FormatoQuiz|Enunciado|Resposta)
	//;
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//estaAtivo:
	//    'Ativo'
	//;
	public EstaAtivoElements getEstaAtivoAccess() {
		return pEstaAtivo;
	}
	
	public ParserRule getEstaAtivoRule() {
		return getEstaAtivoAccess().getRule();
	}
	
	//IU:
	//    'IU'
	//;
	public IUElements getIUAccess() {
		return pIU;
	}
	
	public ParserRule getIURule() {
		return getIUAccess().getRule();
	}
	
	//Posicao:
	//    'Posicao'
	//;
	public PosicaoElements getPosicaoAccess() {
		return pPosicao;
	}
	
	public ParserRule getPosicaoRule() {
		return getPosicaoAccess().getRule();
	}
	
	//Value:
	//    ID | Boolean | UNITYINTDECIMAL | INTEGER | PATH | UI_TYPE | SIMPLE_EVENT_TYPE | EVENT_CODE | EFEITO_ACTION | TEXT_CONTENT
	//;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//Componente:
	//    Gatilho | Comportamento
	//;
	public ComponenteElements getComponenteAccess() {
		return pComponente;
	}
	
	public ParserRule getComponenteRule() {
		return getComponenteAccess().getRule();
	}
	
	//EventoComplexo:
	//    'EventoComplexo'
	//;
	public EventoComplexoElements getEventoComplexoAccess() {
		return pEventoComplexo;
	}
	
	public ParserRule getEventoComplexoRule() {
		return getEventoComplexoAccess().getRule();
	}
	
	//EventoSimples:
	//    'EventoSimples'
	//;
	public EventoSimplesElements getEventoSimplesAccess() {
		return pEventoSimples;
	}
	
	public ParserRule getEventoSimplesRule() {
		return getEventoSimplesAccess().getRule();
	}
	
	//Gatilho:
	//    AoClicar
	//;
	public GatilhoElements getGatilhoAccess() {
		return pGatilho;
	}
	
	public ParserRule getGatilhoRule() {
		return getGatilhoAccess().getRule();
	}
	
	//AoClicar:
	//    'AoClicar'
	//;
	public AoClicarElements getAoClicarAccess() {
		return pAoClicar;
	}
	
	public ParserRule getAoClicarRule() {
		return getAoClicarAccess().getRule();
	}
	
	//Comportamento:
	//    'Comportamento'
	//;
	public ComportamentoElements getComportamentoAccess() {
		return pComportamento;
	}
	
	public ParserRule getComportamentoRule() {
		return getComportamentoAccess().getRule();
	}
	
	//Recurso:
	//     (Imagem | Animacao | Texto)
	//;
	public RecursoElements getRecursoAccess() {
		return pRecurso;
	}
	
	public ParserRule getRecursoRule() {
		return getRecursoAccess().getRule();
	}
	
	//Imagem:
	//    'Imagem'
	//;
	public ImagemElements getImagemAccess() {
		return pImagem;
	}
	
	public ParserRule getImagemRule() {
		return getImagemAccess().getRule();
	}
	
	//Animacao:
	//    'Animacao'
	//;
	public AnimacaoElements getAnimacaoAccess() {
		return pAnimacao;
	}
	
	public ParserRule getAnimacaoRule() {
		return getAnimacaoAccess().getRule();
	}
	
	//Texto:
	//    'Texto'
	//;
	public TextoElements getTextoAccess() {
		return pTexto;
	}
	
	public ParserRule getTextoRule() {
		return getTextoAccess().getRule();
	}
	
	//Conteudo:
	//    'Conteudo'
	//;
	public ConteudoElements getConteudoAccess() {
		return pConteudo;
	}
	
	public ParserRule getConteudoRule() {
		return getConteudoAccess().getRule();
	}
	
	//Tamanho:
	//    'Tamanho'
	//;
	public TamanhoElements getTamanhoAccess() {
		return pTamanho;
	}
	
	public ParserRule getTamanhoRule() {
		return getTamanhoAccess().getRule();
	}
	
	//TamanhoDaFonte:
	//    'TamanhoDaFonte'
	//;
	public TamanhoDaFonteElements getTamanhoDaFonteAccess() {
		return pTamanhoDaFonte;
	}
	
	public ParserRule getTamanhoDaFonteRule() {
		return getTamanhoDaFonteAccess().getRule();
	}
	
	//Caminho:
	//    'Caminho'
	//;
	public CaminhoElements getCaminhoAccess() {
		return pCaminho;
	}
	
	public ParserRule getCaminhoRule() {
		return getCaminhoAccess().getRule();
	}
	
	//ConfigGeral:
	//    'ConfigGeral'
	//;
	public ConfigGeralElements getConfigGeralAccess() {
		return pConfigGeral;
	}
	
	public ParserRule getConfigGeralRule() {
		return getConfigGeralAccess().getRule();
	}
	
	//ComprimentoDaTela:
	//    'ComprimentoDaTela'
	//;
	public ComprimentoDaTelaElements getComprimentoDaTelaAccess() {
		return pComprimentoDaTela;
	}
	
	public ParserRule getComprimentoDaTelaRule() {
		return getComprimentoDaTelaAccess().getRule();
	}
	
	//AlturaDaTela:
	//    'AlturaDaTela'
	//;
	public AlturaDaTelaElements getAlturaDaTelaAccess() {
		return pAlturaDaTela;
	}
	
	public ParserRule getAlturaDaTelaRule() {
		return getAlturaDaTelaAccess().getRule();
	}
	
	//Questao:
	//    'Questao'
	//;
	public QuestaoElements getQuestaoAccess() {
		return pQuestao;
	}
	
	public ParserRule getQuestaoRule() {
		return getQuestaoAccess().getRule();
	}
	
	//Alternativa:
	//    'Alternativa'
	//;
	public AlternativaElements getAlternativaAccess() {
		return pAlternativa;
	}
	
	public ParserRule getAlternativaRule() {
		return getAlternativaAccess().getRule();
	}
	
	//Enunciado:
	//    'Enunciado'
	//;
	public EnunciadoElements getEnunciadoAccess() {
		return pEnunciado;
	}
	
	public ParserRule getEnunciadoRule() {
		return getEnunciadoAccess().getRule();
	}
	
	//Resposta:
	//    'Resposta'
	//;
	public RespostaElements getRespostaAccess() {
		return pResposta;
	}
	
	public ParserRule getRespostaRule() {
		return getRespostaAccess().getRule();
	}
	
	//FormatoQuiz:
	//    'FormatoQuiz'
	//;
	public FormatoQuizElements getFormatoQuizAccess() {
		return pFormatoQuiz;
	}
	
	public ParserRule getFormatoQuizRule() {
		return getFormatoQuizAccess().getRule();
	}
	
	//Estado:
	//    'Estado'
	//;
	public EstadoElements getEstadoAccess() {
		return pEstado;
	}
	
	public ParserRule getEstadoRule() {
		return getEstadoAccess().getRule();
	}
	
	//EstadoFinal:
	//    'EstadoFinal'
	//;
	public EstadoFinalElements getEstadoFinalAccess() {
		return pEstadoFinal;
	}
	
	public ParserRule getEstadoFinalRule() {
		return getEstadoFinalAccess().getRule();
	}
	
	//EstadoInicial:
	//    'EstadoInicial'
	//;
	public EstadoInicialElements getEstadoInicialAccess() {
		return pEstadoInicial;
	}
	
	public ParserRule getEstadoInicialRule() {
		return getEstadoInicialAccess().getRule();
	}
	
	//ProximoEstados:
	//    'ProximoEstados'
	//;
	public ProximoEstadosElements getProximoEstadosAccess() {
		return pProximoEstados;
	}
	
	public ParserRule getProximoEstadosRule() {
		return getProximoEstadosAccess().getRule();
	}
	
	//Item:
	//    'Item'
	//;
	public ItemElements getItemAccess() {
		return pItem;
	}
	
	public ParserRule getItemRule() {
		return getItemAccess().getRule();
	}
	
	//Efeito:
	//    'Efeito'
	//;
	public EfeitoElements getEfeitoAccess() {
		return pEfeito;
	}
	
	public ParserRule getEfeitoRule() {
		return getEfeitoAccess().getRule();
	}
	
	//EstadosAfetados:
	//    'EstadosAfetados'
	//;
	public EstadosAfetadosElements getEstadosAfetadosAccess() {
		return pEstadosAfetados;
	}
	
	public ParserRule getEstadosAfetadosRule() {
		return getEstadosAfetadosAccess().getRule();
	}
	
	//Boolean:
	//    FALSE | TRUE
	//;
	public BooleanElements getBooleanAccess() {
		return pBoolean;
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}
	
	//terminal TEXT_CONTENT:
	//     STRING
	//;
	public TerminalRule getTEXT_CONTENTRule() {
		return tTEXT_CONTENT;
	}
	
	//terminal EFEITO_ACTION:
	//    '[Bloqueia]' | '[Adiciona]'
	//;
	public TerminalRule getEFEITO_ACTIONRule() {
		return tEFEITO_ACTION;
	}
	
	//terminal UI_TYPE:
	//    '[Botao]' | '[Imagem]' |'[Animacao]' | '[Texto]'
	//;
	public TerminalRule getUI_TYPERule() {
		return tUI_TYPE;
	}
	
	//terminal SIMPLE_EVENT_TYPE:
	//    '[proximaTela]'
	//;
	public TerminalRule getSIMPLE_EVENT_TYPERule() {
		return tSIMPLE_EVENT_TYPE;
	}
	
	//terminal UNITYINTDECIMAL:
	//    ('0'..'9')+'.'('0'..'9')
	//;
	public TerminalRule getUNITYINTDECIMALRule() {
		return tUNITYINTDECIMAL;
	}
	
	//terminal INTEGER:
	//    ('1'..'9')('0'..'9')+
	//;
	public TerminalRule getINTEGERRule() {
		return tINTEGER;
	}
	
	//terminal PATH:
	//     SLASH (ID  SLASH)*
	//;
	public TerminalRule getPATHRule() {
		return tPATH;
	}
	
	//terminal SLASH:
	//    '/' | '\b'
	//;
	public TerminalRule getSLASHRule() {
		return tSLASH;
	}
	
	//terminal FALSE:
	//    'false'
	//;
	public TerminalRule getFALSERule() {
		return tFALSE;
	}
	
	//terminal TRUE:
	//    'true'
	//;
	public TerminalRule getTRUERule() {
		return tTRUE;
	}
	
	//terminal EVENT_CODE:
	//    ('A'..'Z')('A'..'Z')('A'..'Z')('0'..'9')+
	//;
	public TerminalRule getEVENT_CODERule() {
		return tEVENT_CODE;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
