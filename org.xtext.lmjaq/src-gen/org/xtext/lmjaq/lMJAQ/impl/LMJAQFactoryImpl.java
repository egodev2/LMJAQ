/**
 * generated by Xtext 2.25.0
 */
package org.xtext.lmjaq.lMJAQ.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.lmjaq.lMJAQ.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LMJAQFactoryImpl extends EFactoryImpl implements LMJAQFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LMJAQFactory init()
  {
    try
    {
      LMJAQFactory theLMJAQFactory = (LMJAQFactory)EPackage.Registry.INSTANCE.getEFactory(LMJAQPackage.eNS_URI);
      if (theLMJAQFactory != null)
      {
        return theLMJAQFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LMJAQFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LMJAQFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LMJAQPackage.MODEL: return createModel();
      case LMJAQPackage.ABSTRACT_ELEMENT: return createAbstractElement();
      case LMJAQPackage.PACKAGE_DECLARATION: return createPackageDeclaration();
      case LMJAQPackage.ABSTRACT_CLASS: return createAbstractClass();
      case LMJAQPackage.ABSTRACT_CLASS_TYPE: return createAbstractClassType();
      case LMJAQPackage.ABSTRACT_PROPERTY: return createAbstractProperty();
      case LMJAQPackage.CLASS_REFERENCE: return createClassReference();
      case LMJAQPackage.PROPERTY: return createProperty();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractElement createAbstractElement()
  {
    AbstractElementImpl abstractElement = new AbstractElementImpl();
    return abstractElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackageDeclaration createPackageDeclaration()
  {
    PackageDeclarationImpl packageDeclaration = new PackageDeclarationImpl();
    return packageDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractClass createAbstractClass()
  {
    AbstractClassImpl abstractClass = new AbstractClassImpl();
    return abstractClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractClassType createAbstractClassType()
  {
    AbstractClassTypeImpl abstractClassType = new AbstractClassTypeImpl();
    return abstractClassType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractProperty createAbstractProperty()
  {
    AbstractPropertyImpl abstractProperty = new AbstractPropertyImpl();
    return abstractProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClassReference createClassReference()
  {
    ClassReferenceImpl classReference = new ClassReferenceImpl();
    return classReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LMJAQPackage getLMJAQPackage()
  {
    return (LMJAQPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LMJAQPackage getPackage()
  {
    return LMJAQPackage.eINSTANCE;
  }

} //LMJAQFactoryImpl
